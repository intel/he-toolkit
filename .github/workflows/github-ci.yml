# Copyright (C) 2021 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: he-toolkit
on:
  # By default this will run when the activity type is "opened", "synchronize",
  # or "reopened".
  pull_request:
    branches:
      - main
      - v2.0-rc # Run on release candidate for v2.0.0
  # Manually run this workflow on any specified branch.
  workflow_dispatch:

###################
# Define env vars #
###################
env:
  HEXL_VER: 1.2.3
  SEAL_VER: 3.7.2
  PALISADE_VER: 1.11.6
  HELIB_VER: 2.2.1
  HEKIT_DIR: ~/.hekit/components
  HEXL_DIR: ${HEKIT_DIR}/hexl/${HEXL_VER}/lib/cmake/hexl-${HEXL_VER}
  SEAL_DIR: ${HEKIT_DIR}/seal/v${SEAL_VER}/install/lib/cmake/SEAL-3.7
  PALISADE_DIR: ${HEKIT_DIR}/palisade/v${PALISADE_VER}/install/lib/Palisade
  HELIB_DIR: ${HEKIT_DIR}/helib/v${HELIB_VER}/share/cmake/helib
  GSL_DIR: ${HEKIT_DIR}/gsl/v3.1.0/install/share/cmake/Microsoft.GSL
  ZSTD_DIR: ${HEKIT_DIR}/zstd/v1.4.5/install/lib/cmake/zstd
  PSI_DIR: ${HEKIT_DIR}/examples/psi
  QUERY_DIR: ${HEKIT_DIR}/examples/secure-query
  LR_DIR: ${HEKIT_DIR}/examples/logistic-regression
  SEAL_KERNELS_DIR: ${HEKIT_DIR}/sample-kernels/seal
  PALISADE_KERNELS_DIR: ${HEKIT_DIR/sample-kernels/palisade

################
# Ubuntu 20.04 #
################
jobs:
  format:
    name: Format
    runs-on: ubuntu-20.04
    # Use environment protection (require review)
    environment: intel_workflow
    steps:
      - uses: actions/checkout@v2
      # Required for pre-commit
      - run: pip3 install cpplint
      - run: sudo snap install shfmt
      - run: sudo apt install shellcheck black
      # NOTE: This is deprecated in favor of pre-commit.ci
      - uses: pre-commit/action@v2.0.2
        with:
          extra_args: --all-files

  test-hekit:
    name: Test hekit commands
    runs-on: ubuntu-20.04
    # Use environment protection (require review)
    environment: intel_workflow
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        run: |
          pip3 install pytest pytest-mock toml
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Run pytests
        run: pytest tests/

  build-and-test-toolkit:
    if: ${{ false }} # FIXME: Disable this job for now
    name: Build, test and run HE Toolkit
    runs-on: ubuntu-20.04
    # Use environment protection (require review)
    environment: intel_workflow
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        run: |
          pip3 install toml
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Init hekit
        run: |
          mkdir -p ~/.hekit
          cp default.config ~/.hekit/default.config

      - name: Build and install default recipe
        run: |
          ./hekit install recipes/default.toml
          ./hekit list

      # TODO: Remove this once there is !! substitution
      - name: Modify paths in recipe files
        run: |
          sed -i -e "s,\(src_dir = \"\)~/git/public-toolkit/v2-prep,\1${GITHUB_WORKSPACE},g" recipes/examples.toml
          sed -i -e "s,\(src_dir = \"\)~/git/public-toolkit/v2-prep,\1${GITHUB_WORKSPACE},g" recipes/sample-kernels.toml

      - name: Build examples
        run: ./hekit build recipes/examples.toml

      - name: Run PSI example
        run: |
          echo "apple\nBanana\ncat" > client.set
          ${{ env.PSI_DIR }}/build/psi client.set --server ${{ env.PSI_DIR }}/build/datasets/fruits.set | grep -B 1 "apple"

      - name: Run Secure Query example
        run: |
          cd ${{ env.QUERY_DIR }}/build
          echo -n "Input: Louisiana, " && ./secure-query <<< $'\n\nLouisiana\n' | grep "Baton Rouge"
          echo -n "Input: North Dakota, " && ./secure-query <<< $'\n\nNorth Dakota\n' | grep "Bismarck"
          echo -n "Input: Wyoming, " && ./secure-query <<< $'\n\nWyoming\n' | grep "Cheyenne"

      - name: Run LR example
        run: ${{ env.LR_DIR }}/build/lr_test --compare --data lrtest_large | grep "All match!"

      - name: Build sample kernels
        run: ./hekit build recipes/sample-kernels.toml

      - name: Run unit tests
        run: |
          ${{ env.SEAL_KERNELS_DIR }}/build/test/unit-test
          ${{ env.PALISADE_KERNELS_DIR }}/build test/unit-test

      # PALISADE sample kernels
      - name: Run PALISADE sample kernels
        run: KMP_WARNINGS=0 OMP_NUM_THREADS=5 ${{ env.PALISADE_KERNELS_DIR }}/build/sample-kernels-palisade --benchmark_out_format=json --benchmark_out="${GITHUB_JOB}_sample-kernels-palisade_${GITHUB_SHA}.json"
      - name: Archive PALISADE sample kernel results
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}}_sample-kernels-palisade_${{github.sha}}.json
          path: ${{github.job}}_sample-kernels-palisade_${{github.sha}}.json
          retention-days: 90 # Maximum for free version

      # SEAL sample kernels
      - name: Run SEAL sample kernels
        run: KMP_WARNINGS=0 OMP_NUM_THREADS=5 ${{ env.SEAL_KERNELS_DIR }}/build/sample-kernels-seal --benchmark_out_format=json --benchmark_out="${GITHUB_JOB}_sample-kernels-seal_${GITHUB_SHA}.json"
      - name: Archive SEAL sample kernel results
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}}_sample-kernels-seal_${{github.sha}}.json
          path: ${{github.job}}_sample-kernels-seal_${{github.sha}}.json
          retention-days: 90 # Maximum for free version


##############
# IceLake CI #
##############
  format-icelake:
    name: Format (IceLake)
    runs-on: [self-hosted, Linux, X64, ice-lake]
    # Use environment protection (require review)
    environment: intel_workflow
    steps:
      - uses: actions/checkout@v2
        # Add local bin for cpplint
      - name: Setup
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: pre-commit
        run: pre-commit run --all-files

  test-hekit-icelake:
    name: Test hekit commands (IceLake)
    runs-on: [self-hosted, Linux, X64, ice-lake]
    # Use environment protection (require review)
    environment: intel_workflow
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        # Add local bin for pytest
      - name: Setup
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Run pytests
        run: pytest tests/

  build-and-test-toolkit-icelake:
    name: Build, test and run HE Toolkit (IceLake)
    runs-on: [self-hosted, Linux, X64, ice-lake]
    # Use environment protection (require review)
    environment: intel_workflow
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        # Add local bin for pip modules
      - name: Setup
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Init hekit
        run: |
          mkdir -p ~/.hekit
          cp default.config ~/.hekit

      - name: Build and install default recipe
        run: |
          ./hekit install recipes/default.toml
          ./hekit list

      # TODO: Remove this once there is !! substitution
      - name: Modify paths in recipe files
        run: |
          echo ${GITHUB_WORKSPACE}
          sed -i -e "s,\(src_dir = \"\)~/git/public-toolkit/v2-prep,\1${GITHUB_WORKSPACE},g" recipes/examples.toml
          sed -i -e "s,\(src_dir = \"\)~/git/public-toolkit/v2-prep,\1${GITHUB_WORKSPACE},g" recipes/sample-kernels.toml

      - name: Build examples
        run: ./hekit build recipes/examples.toml

      - name: Run PSI example
        run: |
          echo "apple\nBanana\ncat" > client.set
          ${{ env.PSI_DIR }}/build/psi client.set --server ${{ env.PSI_DIR }}/build/datasets/fruits.set | grep -B 1 "apple"

      - name: Run Secure Query example
        run: |
          cd ${{ env.QUERY_DIR }}/build
          echo -n "Input: Louisiana, " && ./secure-query <<< $'\n\nLouisiana\n' | grep "Baton Rouge"
          echo -n "Input: North Dakota, " && ./secure-query <<< $'\n\nNorth Dakota\n' | grep "Bismarck"
          echo -n "Input: Wyoming, " && ./secure-query <<< $'\n\nWyoming\n' | grep "Cheyenne"

      - name: Run LR example
        run: ${{ env.LR_DIR }}/build/lr_test --compare --data lrtest_large | grep "All match!"

      - name: Build sample kernels
        run: ./hekit build recipes/sample-kernels.toml

      - name: Run unit tests
        run: |
          ${{ env.SEAL_KERNELS_DIR }}/build/test/unit-test
          ${{ env.PALISADE_KERNELS_DIR }}/build test/unit-test

      # PALISADE sample kernels
      - name: Run PALISADE sample kernels
        run: KMP_WARNINGS=0 OMP_NUM_THREADS=5 ${{ env.PALISADE_KERNELS_DIR }}/build/sample-kernels-palisade --benchmark_out_format=json --benchmark_out="${GITHUB_JOB}_sample-kernels-palisade_${GITHUB_SHA}.json"
      - name: Archive PALISADE sample kernel results
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}}_sample-kernels-palisade_${{github.sha}}.json
          path: ${{github.job}}_sample-kernels-palisade_${{github.sha}}.json
          retention-days: 90 # Maximum for free version

      # SEAL sample kernels
      - name: Run SEAL sample kernels
        run: KMP_WARNINGS=0 OMP_NUM_THREADS=5 ${{ env.SEAL_KERNELS_DIR }}/build/sample-kernels-seal --benchmark_out_format=json --benchmark_out="${GITHUB_JOB}_sample-kernels-seal_${GITHUB_SHA}.json"
      - name: Archive SEAL sample kernel results
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.job}}_sample-kernels-seal_${{github.sha}}.json
          path: ${{github.job}}_sample-kernels-seal_${{github.sha}}.json
          retention-days: 90 # Maximum for free version
